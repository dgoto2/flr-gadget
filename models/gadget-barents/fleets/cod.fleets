;
;	Fleets in the Barents Sea cod stock
;
;	commercial fleets
;
; 	gill
;
[component]
totalfleet 	catch.gill		; fleet name
livesonareas 	1 2			; areas for the fleet
multiplicative 	( * 1e+01 #cod.gill.scale)		; scaling factor
suitability                     	
cod.mat		function andersenfleet  0 ( * 1 #cod.gilselpar_1) 1 ( * 1 #cod.gilselpar_3) ( * 1 #cod.gilselpar_4) ( * 1 #cod.gilselpar_5)
cod.imm		function andersenfleet  0 ( * 1 #cod.gilselpar_1) 1 ( * 1 #cod.gilselpar_3) ( * 1 #cod.gilselpar_4) ( * 1 #cod.gilselpar_5)
cod.onetwo	function andersenfleet  0 ( * 1 #cod.gilselpar_1) 1 ( * 1 #cod.gilselpar_3) ( * 1 #cod.gilselpar_4) ( * 1 #cod.gilselpar_5)
cod.zero	function andersenfleet  0 ( * 1 #cod.gilselpar_1) 1 ( * 1 #cod.gilselpar_3) ( * 1 #cod.gilselpar_4) ( * 1 #cod.gilselpar_5)
amount		cod.data/cod.fleet.data	; where the catch data is stored
;
; 	trawlothers
;
[component]
totalfleet 	catch.trawlothers	; fleet name
livesonareas 	1 2             	; areas for the fleet
multiplicative 	#cod.trawl.scale	; scaling factor
suitability                     	; 	alpha    	    beta  	     gamma  		delta
cod.mat		function andersenfleet  0 #cod.trawlselpar_1 1 #cod.trawlselpar_3 #cod.trawlselpar_4 #cod.trawlselpar_5
cod.imm		function andersenfleet  0 #cod.trawlselpar_1 1 #cod.trawlselpar_3 #cod.trawlselpar_4 #cod.trawlselpar_5
cod.onetwo	function andersenfleet  0 #cod.trawlselpar_1 1 #cod.trawlselpar_3 #cod.trawlselpar_4 #cod.trawlselpar_5
cod.zero	function andersenfleet  0 #cod.trawlselpar_1 1 #cod.trawlselpar_3 #cod.trawlselpar_4 #cod.trawlselpar_5
amount          cod.data/cod.fleet.data	; where the catch data is stored
;
; 	russia
;
[component]
totalfleet 	catch.russia 		; fleet name
livesonareas    1 2 			; areas for the fleet
multiplicative 	#cod.russia.scale 	; scaling factor
suitability                     	; 	alpha		    beta	         gamma 		   delta
cod.mat		function andersenfleet  0 #cod.russiaselpar_1 1 #cod.russiaselpar_3 #cod.russiaselpar_4 #cod.russiaselpar_5
cod.imm		function andersenfleet  0 #cod.russiaselpar_1 1 #cod.russiaselpar_3 #cod.russiaselpar_4 #cod.russiaselpar_5
cod.onetwo	function andersenfleet  0 #cod.russiaselpar_1 1 #cod.russiaselpar_3 #cod.russiaselpar_4 #cod.russiaselpar_5
cod.zero	function andersenfleet  0 #cod.russiaselpar_1 1 #cod.russiaselpar_3 #cod.russiaselpar_4 #cod.russiaselpar_5
amount          cod.data/cod.fleet.data	; where the catch data is stored
;
;	survey fleets
;
; 	trawl
;
[component]
effortfleet 	survey.trawl 		; fleet name
livesonareas 	1  			; areas for the fleet
multiplicative 	#cod.survey.trawl.scale  	; scaling factor
suitability				; 	alpha   		 beta		     gamma 		 delta
cod.mat		function andersenfleet  0 #cod.trawlsurselpar_1 1 #cod.trawlsurselpar_3 #cod.trawlsurselpar_4 #cod.trawlsurselpar_5
cod.imm		function andersenfleet  0 #cod.trawlsurselpar_1 1 #cod.trawlsurselpar_3 #cod.trawlsurselpar_4 #cod.trawlsurselpar_5
cod.onetwo	function andersenfleet  0 #cod.trawlsurselpar_1 1 #cod.trawlsurselpar_3 #cod.trawlsurselpar_4 #cod.trawlsurselpar_5
cod.zero	function andersenfleet  0 #cod.trawlsurselpar_1 1 #cod.trawlsurselpar_3 #cod.trawlsurselpar_4 #cod.trawlsurselpar_5
catchability
cod.mat		#cod.mat.trawlsur_catchability 
cod.imm		#cod.imm.trawlsur_catchability 
cod.onetwo	#cod.onetwo.trawlsur_catchability 
cod.zero 	#cod.zero.trawlsur_catchability 
amount          cod.data/cod.fleet.data	; where the catch data is stored
;
; 	acoustic (effort)
;
[component]
effortfleet 	survey.acoustic 	; fleet name
livesonareas 	1  			; areas for the fleet
multiplicative 	#cod.survey.acoustic.scale  
					; scaling factor
suitability				; 	alpha			    beta       	  gamma  		delta
cod.mat		function andersenfleet  0 ( * 1 #cod.acousurselpar_1) 1 ( * 1 #cod.acousurselpar_3) #cod.acousurselpar_4 ( * 1 #cod.acousurselpar_5)
cod.imm		function andersenfleet  0 ( * 1 #cod.acousurselpar_1) 1 ( * 1 #cod.acousurselpar_3) #cod.acousurselpar_4 ( * 1 #cod.acousurselpar_5)
cod.onetwo	function andersenfleet  0 ( * 1 #cod.acousurselpar_1) 1 ( * 1 #cod.acousurselpar_3) #cod.acousurselpar_4 ( * 1 #cod.acousurselpar_5)
cod.zero	function andersenfleet  0 ( * 1 #cod.acousurselpar_1) 1 ( * 1 #cod.acousurselpar_3) #cod.acousurselpar_4 ( * 1 #cod.acousurselpar_5)
catchability
cod.mat		#cod.mat.acousur_catchability 
cod.imm		#cod.imm.acousur_catchability 
cod.onetwo	#cod.onetwo.acousur_catchability 
cod.zero 	#cod.zero.acousur_catchability 
amount          cod.data/cod.fleet.data	; where the catch data is stored
;
; 	acoustic (linear)
;
;[component]
;linearfleet 	survey.acoustic.linear 	; fleet name
;livesonareas 	1  			; areas for the fleet
;multiplicative #cod.survey.acoustic.scale  
					; scaling factor
;suitability				; 	alpha			    beta   	gamma  delta
;cod.mat		function andersenfleet  0 #cod.acousurselpar_1 1 #cod.acousurselpar_3 #cod.acousurselpar_4 #cod.acousurselpar_5
;cod.imm		function andersenfleet  0 #cod.acousurselpar_1 1 #cod.acousurselpar_3 #cod.acousurselpar_4 #cod.acousurselpar_5
;cod.onetwo	function andersenfleet  0 #cod.acousurselpar_1 1 #cod.acousurselpar_3 #cod.acousurselpar_4 #cod.acousurselpar_5
;cod.zero	function andersenfleet  0 #cod.acousurselpar_1 1 #cod.acousurselpar_3 #cod.acousurselpar_4 #cod.acousurselpar_5
;amount          cod.data/cod.fleet.data	; where the catch data is stored


;################################################################################################################
; 	predicted fleets
;
; 	acoustic survey 
;
;[component]
;linearfleet     future.survey.acoustic          ; fleet name
;livesonareas    1 2              ; areas for the fleet
;multiplicative  #mult           ; scaling factor
;suitability
;cod.mat    function exponential       #acomm   #bcomm   0      1
;amount          cod.data/cod.fleet.predict   ; where the catch data is stored
;
; 	commercial fleets;
;




